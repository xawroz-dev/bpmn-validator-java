name: BPMN Validation

on:
  pull_request:
    branches:
      - '**'

jobs:
  validate_bpmn:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11' # Use the version compatible with Camunda BPM

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Get list of changed BPMN files
        id: get_changed_files
        run: |
          # Determine the base ref and head ref
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            BASE_REF="${{ github.event.pull_request.base.sha }}"
            HEAD_REF="${{ github.event.pull_request.head.sha }}"
          else
            BASE_REF="${{ github.event.before }}"
            HEAD_REF="${{ github.event.after }}"
          fi

          echo "BASE_REF=$BASE_REF"
          echo "HEAD_REF=$HEAD_REF"

          git fetch origin $BASE_REF --depth=1
          git fetch origin $HEAD_REF --depth=1

          git diff --name-only $BASE_REF $HEAD_REF > changed_files.txt
          bpmn_files=$(grep '\.bpmn$' changed_files.txt || true)
          if [ -z "$bpmn_files" ]; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "$bpmn_files" > bpmn_files.txt
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Run BPMN Validator
        if: steps.get_changed_files.outputs.changed == 'true'
        run: |
          mkdir -p bpmn_files
          xargs -a bpmn_files.txt -I{} cp {} bpmn_files/
          java -cp target/bpmn-validator-java-1.0-SNAPSHOT.jar com.example.Main

      - name: Deploy Report to GitHub Pages
        if: steps.get_changed_files.outputs.changed == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git clone --depth=1 --branch=gh-pages https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }} gh-pages

          mkdir -p gh-pages/reports/pr-${{ github.event.pull_request.number }}
          cp reports/report.html gh-pages/reports/pr-${{ github.event.pull_request.number }}/index.html

          cd gh-pages
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

          if [ -n "$(git status --porcelain)" ]; then
            git add .
            git commit -m "Add report for PR #${{ github.event.pull_request.number }}"
            git push origin gh-pages
          else
            echo "No changes to commit"
          fi

      - name: Comment on PR with Report Link
        if: steps.get_changed_files.outputs.changed == 'true' && github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = context.payload.pull_request.number;
            const repo = context.repo.repo;
            const owner = context.repo.owner;
            const reportUrl = `https://${owner}.github.io/${repo}/reports/pr-${prNumber}/`;

            await github.rest.issues.createComment({
              owner: owner,
              repo: repo,
              issue_number: prNumber,
              body: `ðŸš€ BPMN validation report is available [here](${reportUrl}).`
            });

      - name: No BPMN files changed
        if: steps.get_changed_files.outputs.changed != 'true'
        run: echo "No BPMN files were changed in this PR."
